@startuml

' This is a PlantUML diagram.
'
' For on-the-fly rendering of the latest version of this diagram, please visit:
' http://www.plantuml.com/plantuml/proxy?idx=0&src=https://raw.githubusercontent.com/fabric8-services/fabric8-notification/master/docs/sequence_diagram_notify_api.plantuml&fmt=svg
'
' To generate a PNG diagram from this file follow these steps:
' $ wget -o plantuml.jar http://sourceforge.net/projects/plantuml/files/plantuml.jar/download
' $ java -jar plantuml.jar -verbose sequence_diagram_notify_api.plantuml

entity Client
participant "/api/notify" as Notify
participant Validator
participant Notifier
participant "Template\nRegistry" as TemplateRegistry
participant "Collector\nRegistry" as CollectorRegistry
participant Notifier
participant "Receiver\nResolver" as ReceiverResolver
participant "Email\nTemplate" as EmailTemplate
participant Sender
participant "Mandrill\nAPI" as MandrillAPI

Client -> Notify : Notification Payload\n(HTTP POST)
activate Notify
Notify -> Validator : Validate()\n(type)
Notify <-- Validator : true/false
note right: if false,\nreturns HTTP 400 to Client
Notify -> TemplateRegistry  : Get()\n(type)
Notify <-- TemplateRegistry : EmailTemplate
note right: if not found,\nreturns HTTP 400 to Client
Notify -> CollectorRegistry : Get()\n(type)
Notify <-- CollectorRegistry : ReceiverResolver
note right: if not found,\nreturns HTTP 500 to Client
Notify -> Notifier : Send()
activate Notifier
Client <-- Notify : HTTP 202\nAccepted
deactivate Notify
Notifier -> ReceiverResolver : ReceiverResolver()
Notifier <-- ReceiverResolver : []Receiver
Notifier -> EmailTemplate : Render()
Notifier <-- EmailTemplate : (subject, body)
Notifier -> Sender : Send()\n(subject, body, []Receiver)
Sender -> MandrillAPI : MessageSend()\n(Message)
Sender <-- MandrillAPI
Notifier <-- Sender
deactivate Notifier

@enduml